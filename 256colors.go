package colproximate

import "github.com/lucasb-eyer/go-colorful"

var XTerm256 = Palette{
	mustParseHex("#000000"),
	mustParseHex("#800000"),
	mustParseHex("#008000"),
	mustParseHex("#808000"),
	mustParseHex("#000080"),
	mustParseHex("#800080"),
	mustParseHex("#008080"),
	mustParseHex("#c0c0c0"),
	mustParseHex("#808080"),
	mustParseHex("#ff0000"),
	mustParseHex("#00ff00"),
	mustParseHex("#ffff00"),
	mustParseHex("#0000ff"),
	mustParseHex("#ff00ff"),
	mustParseHex("#00ffff"),
	mustParseHex("#ffffff"),
	mustParseHex("#000000"),
	mustParseHex("#00005f"),
	mustParseHex("#000087"),
	mustParseHex("#0000af"),
	mustParseHex("#0000d7"),
	mustParseHex("#0000ff"),
	mustParseHex("#005f00"),
	mustParseHex("#005f5f"),
	mustParseHex("#005f87"),
	mustParseHex("#005faf"),
	mustParseHex("#005fd7"),
	mustParseHex("#005fff"),
	mustParseHex("#008700"),
	mustParseHex("#00875f"),
	mustParseHex("#008787"),
	mustParseHex("#0087af"),
	mustParseHex("#0087d7"),
	mustParseHex("#0087ff"),
	mustParseHex("#00af00"),
	mustParseHex("#00af5f"),
	mustParseHex("#00af87"),
	mustParseHex("#00afaf"),
	mustParseHex("#00afd7"),
	mustParseHex("#00afff"),
	mustParseHex("#00d700"),
	mustParseHex("#00d75f"),
	mustParseHex("#00d787"),
	mustParseHex("#00d7af"),
	mustParseHex("#00d7d7"),
	mustParseHex("#00d7ff"),
	mustParseHex("#00ff00"),
	mustParseHex("#00ff5f"),
	mustParseHex("#00ff87"),
	mustParseHex("#00ffaf"),
	mustParseHex("#00ffd7"),
	mustParseHex("#00ffff"),
	mustParseHex("#5f0000"),
	mustParseHex("#5f005f"),
	mustParseHex("#5f0087"),
	mustParseHex("#5f00af"),
	mustParseHex("#5f00d7"),
	mustParseHex("#5f00ff"),
	mustParseHex("#5f5f00"),
	mustParseHex("#5f5f5f"),
	mustParseHex("#5f5f87"),
	mustParseHex("#5f5faf"),
	mustParseHex("#5f5fd7"),
	mustParseHex("#5f5fff"),
	mustParseHex("#5f8700"),
	mustParseHex("#5f875f"),
	mustParseHex("#5f8787"),
	mustParseHex("#5f87af"),
	mustParseHex("#5f87d7"),
	mustParseHex("#5f87ff"),
	mustParseHex("#5faf00"),
	mustParseHex("#5faf5f"),
	mustParseHex("#5faf87"),
	mustParseHex("#5fafaf"),
	mustParseHex("#5fafd7"),
	mustParseHex("#5fafff"),
	mustParseHex("#5fd700"),
	mustParseHex("#5fd75f"),
	mustParseHex("#5fd787"),
	mustParseHex("#5fd7af"),
	mustParseHex("#5fd7d7"),
	mustParseHex("#5fd7ff"),
	mustParseHex("#5fff00"),
	mustParseHex("#5fff5f"),
	mustParseHex("#5fff87"),
	mustParseHex("#5fffaf"),
	mustParseHex("#5fffd7"),
	mustParseHex("#5fffff"),
	mustParseHex("#870000"),
	mustParseHex("#87005f"),
	mustParseHex("#870087"),
	mustParseHex("#8700af"),
	mustParseHex("#8700d7"),
	mustParseHex("#8700ff"),
	mustParseHex("#875f00"),
	mustParseHex("#875f5f"),
	mustParseHex("#875f87"),
	mustParseHex("#875faf"),
	mustParseHex("#875fd7"),
	mustParseHex("#875fff"),
	mustParseHex("#878700"),
	mustParseHex("#87875f"),
	mustParseHex("#878787"),
	mustParseHex("#8787af"),
	mustParseHex("#8787d7"),
	mustParseHex("#8787ff"),
	mustParseHex("#87af00"),
	mustParseHex("#87af5f"),
	mustParseHex("#87af87"),
	mustParseHex("#87afaf"),
	mustParseHex("#87afd7"),
	mustParseHex("#87afff"),
	mustParseHex("#87d700"),
	mustParseHex("#87d75f"),
	mustParseHex("#87d787"),
	mustParseHex("#87d7af"),
	mustParseHex("#87d7d7"),
	mustParseHex("#87d7ff"),
	mustParseHex("#87ff00"),
	mustParseHex("#87ff5f"),
	mustParseHex("#87ff87"),
	mustParseHex("#87ffaf"),
	mustParseHex("#87ffd7"),
	mustParseHex("#87ffff"),
	mustParseHex("#af0000"),
	mustParseHex("#af005f"),
	mustParseHex("#af0087"),
	mustParseHex("#af00af"),
	mustParseHex("#af00d7"),
	mustParseHex("#af00ff"),
	mustParseHex("#af5f00"),
	mustParseHex("#af5f5f"),
	mustParseHex("#af5f87"),
	mustParseHex("#af5faf"),
	mustParseHex("#af5fd7"),
	mustParseHex("#af5fff"),
	mustParseHex("#af8700"),
	mustParseHex("#af875f"),
	mustParseHex("#af8787"),
	mustParseHex("#af87af"),
	mustParseHex("#af87d7"),
	mustParseHex("#af87ff"),
	mustParseHex("#afaf00"),
	mustParseHex("#afaf5f"),
	mustParseHex("#afaf87"),
	mustParseHex("#afafaf"),
	mustParseHex("#afafd7"),
	mustParseHex("#afafff"),
	mustParseHex("#afd700"),
	mustParseHex("#afd75f"),
	mustParseHex("#afd787"),
	mustParseHex("#afd7af"),
	mustParseHex("#afd7d7"),
	mustParseHex("#afd7ff"),
	mustParseHex("#afff00"),
	mustParseHex("#afff5f"),
	mustParseHex("#afff87"),
	mustParseHex("#afffaf"),
	mustParseHex("#afffd7"),
	mustParseHex("#afffff"),
	mustParseHex("#d70000"),
	mustParseHex("#d7005f"),
	mustParseHex("#d70087"),
	mustParseHex("#d700af"),
	mustParseHex("#d700d7"),
	mustParseHex("#d700ff"),
	mustParseHex("#d75f00"),
	mustParseHex("#d75f5f"),
	mustParseHex("#d75f87"),
	mustParseHex("#d75faf"),
	mustParseHex("#d75fd7"),
	mustParseHex("#d75fff"),
	mustParseHex("#d78700"),
	mustParseHex("#d7875f"),
	mustParseHex("#d78787"),
	mustParseHex("#d787af"),
	mustParseHex("#d787d7"),
	mustParseHex("#d787ff"),
	mustParseHex("#d7af00"),
	mustParseHex("#d7af5f"),
	mustParseHex("#d7af87"),
	mustParseHex("#d7afaf"),
	mustParseHex("#d7afd7"),
	mustParseHex("#d7afff"),
	mustParseHex("#d7d700"),
	mustParseHex("#d7d75f"),
	mustParseHex("#d7d787"),
	mustParseHex("#d7d7af"),
	mustParseHex("#d7d7d7"),
	mustParseHex("#d7d7ff"),
	mustParseHex("#d7ff00"),
	mustParseHex("#d7ff5f"),
	mustParseHex("#d7ff87"),
	mustParseHex("#d7ffaf"),
	mustParseHex("#d7ffd7"),
	mustParseHex("#d7ffff"),
	mustParseHex("#ff0000"),
	mustParseHex("#ff005f"),
	mustParseHex("#ff0087"),
	mustParseHex("#ff00af"),
	mustParseHex("#ff00d7"),
	mustParseHex("#ff00ff"),
	mustParseHex("#ff5f00"),
	mustParseHex("#ff5f5f"),
	mustParseHex("#ff5f87"),
	mustParseHex("#ff5faf"),
	mustParseHex("#ff5fd7"),
	mustParseHex("#ff5fff"),
	mustParseHex("#ff8700"),
	mustParseHex("#ff875f"),
	mustParseHex("#ff8787"),
	mustParseHex("#ff87af"),
	mustParseHex("#ff87d7"),
	mustParseHex("#ff87ff"),
	mustParseHex("#ffaf00"),
	mustParseHex("#ffaf5f"),
	mustParseHex("#ffaf87"),
	mustParseHex("#ffafaf"),
	mustParseHex("#ffafd7"),
	mustParseHex("#ffafff"),
	mustParseHex("#ffd700"),
	mustParseHex("#ffd75f"),
	mustParseHex("#ffd787"),
	mustParseHex("#ffd7af"),
	mustParseHex("#ffd7d7"),
	mustParseHex("#ffd7ff"),
	mustParseHex("#ffff00"),
	mustParseHex("#ffff5f"),
	mustParseHex("#ffff87"),
	mustParseHex("#ffffaf"),
	mustParseHex("#ffffd7"),
	mustParseHex("#ffffff"),
	mustParseHex("#080808"),
	mustParseHex("#121212"),
	mustParseHex("#1c1c1c"),
	mustParseHex("#262626"),
	mustParseHex("#303030"),
	mustParseHex("#3a3a3a"),
	mustParseHex("#444444"),
	mustParseHex("#4e4e4e"),
	mustParseHex("#585858"),
	mustParseHex("#606060"),
	mustParseHex("#666666"),
	mustParseHex("#767676"),
	mustParseHex("#808080"),
	mustParseHex("#8a8a8a"),
	mustParseHex("#949494"),
	mustParseHex("#9e9e9e"),
	mustParseHex("#a8a8a8"),
	mustParseHex("#b2b2b2"),
	mustParseHex("#bcbcbc"),
	mustParseHex("#c6c6c6"),
	mustParseHex("#d0d0d0"),
	mustParseHex("#dadada"),
	mustParseHex("#e4e4e4"),
	mustParseHex("#eeeeee"),
}

func mustParseHex(s string) colorful.Color {
	c, err := colorful.Hex(s)
	if err != nil {
		panic("MustParseHex: " + err.Error())
	}
	return c
}
